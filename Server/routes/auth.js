import { Router } from 'express';
import { register, login, getMe } from '../controllers/auth.js';
import { verifyCode, sendResetCode, verifyResetCode, resetPassword } from '../controllers/authController.js';
import { checkAuth } from "../utils/checkAuth.js";
import userSearchRoute from './userSearch.js';
import User from '../models/User.js';
import { uploadAvatar } from "../controllers/auth.js";
import multer from "multer";

const router = new Router();

// üîπ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Multer –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const storage = multer.diskStorage({
    destination: (req, file, cb) => {
        cb(null, "uploads/avatars/"); // –ü–∞–ø–∫–∞, –∫—É–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ñ–∞–π–ª—ã
    },
    filename: (req, file, cb) => {
        cb(null, `${Date.now()}-${file.originalname}`);
    },
});

const upload = multer({ storage });

// üîπ –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
router.post("/upload-avatar", checkAuth, upload.single("avatar"), uploadAvatar);

// üîπ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
router.post('/register', register);

// üîπ –õ–æ–≥–∏–Ω
router.post('/login', login);

// üîπ –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
router.get('/me', checkAuth, async (req, res) => {
    try {
        const user = await User.findById(req.userId).select('fullName username');
        if (!user) {
            return res.status(404).json({ message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω' });
        }
        res.json(user);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error);
        res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
});

// üîπ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–¥–∞ (–¥–ª—è –≤—Ö–æ–¥–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)
router.post('/verify', verifyCode);

// üîπ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
router.post('/send-reset-code', sendResetCode); // –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω
router.post('/verify-reset-code', verifyResetCode); // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–¥–∞
router.post('/reset-password', resetPassword); // –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è

// üîπ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
router.use('/users', userSearchRoute);

export default router;
